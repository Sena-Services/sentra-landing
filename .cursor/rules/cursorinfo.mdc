---
description: 
globs: 
alwaysApply: true
---
# Sentra Landing Page Project Snapshot

## Overview

This project is the landing page for Sentra, a B2B travel platform. The landing page is designed as a single-page scrolling website, with different sections highlighting various aspects of the Sentra platform.

## Technology Stack

*   **Framework**: Next.js (v15.3.2)
*   **Language**: TypeScript (v5)
*   **UI Library**: React (v19.0.0)
*   **Styling**: Tailwind CSS (v4)
*   **Animation**: Framer Motion (motion v12.15.0)
*   **Icons**: Lucide React (v0.511.0)
*   **Custom Fonts**: Rockwell (local), Space Grotesk (local), Rockybilly (local), Plus Jakarta Sans, Inter (configured, currently Rockwell is primary for IntroSection answer, Space Grotesk for question, Rockybilly for question)
*   **Linting**: ESLint (v9)
*   **Package Manager**: npm

## Project Structure

*   `src/app/`: Contains the main application routing and page logic.
    *   `page.tsx`: The main entry point for the landing page, rendering different sections.
    *   `layout.tsx`: The root layout component.
    *   `globals.css`: Global styles for the application, including `@font-face` declarations for Rockwell, Space Grotesk, and Rockybilly.
*   `src/components/`: Contains reusable React components.
    *   `NavBar.tsx`: The navigation bar component. Includes a bottom border.
    *   `IntroSection.tsx`: The first section of the landing page.
        *   Explains "What is Sentra?". The question uses the Space Grotesk font. The word "Sentra" is highlighted with a "rough" `ScribbleUnderline`.
        *   The answer sentence uses the local Rockwell font. Keywords within the answer are bold, Rockwell font, `text-3xl`, and feature a "rough" style `ScribbleUnderline` whose color dynamically matches the keyword's text color.
        *   The keyword definition (description appearing when a keyword is active) uses Rockwell font (medium weight, non-italic) and a standard text color (`text-sentra-midnight-deck`).
        *   The keyword definition header (e.g., "lightweight:") matches the answer keywords in font (Rockwell), style (bold), and size (`text-3xl`). Its "rough" `ScribbleUnderline` also dynamically matches the keyword's text color.
        *   A `tailwindToHexColorMap` is used to resolve Tailwind text color classes to hex values for the underlines.
        *   Features interactive keywords with hover effects enabled, and timed rotation resumes when not hovering. The background "progress bar" animation on active keywords is commented out.
        *   Layout and styling are highly configurable via `MANUAL_CONTROLS`.
    *   `Keyword.tsx`: Component for keyword display and interaction within `IntroSection.tsx`. Keywords use Rockwell font, are bold, `text-3xl`, and have a "rough" `ScribbleUnderline`. The text color and underline color are dynamically set based on props (with underline color being a resolved hex value). The background animation effect is commented out.
    *   `ScribbleUnderline.tsx`: Reusable component for adding hand-drawn style underlines. Now includes a `variant` prop (`default` or `keyword`) to allow for slightly different SVG positioning and sizing based on context.
    *   `ScribbleDemo.tsx`: Demo component showcasing all scribble underline styles and customization options (temporarily added to main page).
    *   `FeaturesSection.tsx`: Placeholder for features section (currently commented out in `page.tsx`).
    *   `src/components/magicui/grid-pattern.tsx`: The `GridPattern` component from Magic UI, used for subtle background effects.
*   `public/`: Static assets, including font files in `public/fonts/`.
*   `package.json`: Project dependencies and scripts.
*   `next.config.ts`: Next.js configuration.
*   `tailwind.config.ts`: Tailwind CSS configuration, including the `rockwell` font family and Sentra brand colors. Other display/body fonts are temporarily commented out for focused Rockwell testing.
*   `tsconfig.json`: TypeScript configuration.

## Current Development State

*   The basic structure of the single-page scrolling website is in place.
*   The `NavBar` component is implemented.
*   The `IntroSection` component is largely complete:
    *   The "What is Sentra?" question uses Space Grotesk font, with "Sentra" having a `ScribbleUnderline`.
    *   The answer sentence is styled with the local Rockwell font. Keywords within are Rockwell, bold, `text-3xl`, with dynamically colored scribble underlines.
    *   The keyword definition uses Rockwell font (medium weight, non-italic) with `text-sentra-midnight-deck` color. The definition header is styled to match the answer's keywords, including a dynamically colored scribble underline.
    *   Keyword highlighting mechanism is implemented: keywords are always colored (text and underline dynamically matched), use Rockwell font, are bold, `text-3xl`. Hover and timed rotation animations are active. The animated background fill on keywords is commented out.
    *   A color map (`tailwindToHexColorMap`) is used in `IntroSection.tsx` to provide hex colors to underlines.
    *   Layout is responsive and heavily customizable via `MANUAL_CONTROLS`.
*   The `Keyword.tsx` component ensures keywords are styled with Rockwell font, bold, `text-3xl`, and dynamically colored text and scribble underlines. The background animation is commented out.
*   `ScribbleUnderline.tsx` now supports a `variant` prop for contextual styling adjustments.
*   Local Rockwell font has been integrated and applied.
*   Local Space Grotesk font has been integrated and applied via `@font-face` in `src/app/globals.css` from `public/fonts/Bungee,Playfair_Display,Space_Grotesk/Space_Grotesk/static/` (using static font files).
*   Local Rockybilly font has been integrated and applied via `@font-face` in `src/app/globals.css` from `public/fonts/rockybilly/Rockybilly.ttf`.
*   All three fonts (`font-rockwell`, `font-space-grotesk`, `font-rockybilly`) are defined in `tailwind.config.ts`.
*   Other fonts (Plus Jakarta Sans, Inter) were previously configured; their `@import` in `globals.css` and definitions in `tailwind.config.ts` are currently commented out but can be re-enabled.
*   Code across components like `IntroSection.tsx`, `Keyword.tsx`, `globals.css`, and `tailwind.config.ts` has been cleaned of unnecessary comments.
*   The `FeaturesSection` and other planned sections ("About Us", "Book a Demo") exist as commented-out placeholders in `src/app/page.tsx`.

## Features Section Details (Planned - Currently Commented Out)

*   **Layout**: Designed to fit within a specific viewport height (e.g., `90vh`, configurable), with top/bottom padding.
*   **Left Sidebar Features**: Planned for interactive feature list with icons.
*   **Right Area (Horizontal Scroller)**: Planned to display content for each feature.

## Making Changes

1.  **Running the development server**:
    ```bash
    npm run dev
    ```
2.  **Modifying `IntroSection.tsx`**:
    *   Adjust text, keyword definitions, colors in the `tokens` array.
    *   Fine-tune layout, sizing, and spacing using the `MANUAL_CONTROLS` object.
    *   Keyword animations (hover and timed rotation) are now active by default. The `paused` state in `IntroSection.tsx` is initially `false`. The logic within `handleKeywordHover` and `handleKeywordLeave` is active.
3.  **Font Management**:
    *   Rockwell font is loaded via `@font-face` in `src/app/globals.css` from `public/fonts/Rockwell-Font/`.
    *   Space Grotesk is loaded via `@font-face` in `src/app/globals.css` from `public/fonts/Bungee,Playfair_Display,Space_Grotesk/Space_Grotesk/static/` (using static font files).
    *   Rockybilly font is loaded via `@font-face` in `src/app/globals.css` from `public/fonts/rockybilly/Rockybilly.ttf`.
    *   All fonts (`font-rockwell`, `font-space-grotesk`, `font-rockybilly`) are defined in `tailwind.config.ts`.
    *   Other fonts (Plus Jakarta Sans, Inter) were previously configured; their `@import` in `globals.css` and definitions in `tailwind.config.ts` are currently commented out but can be re-enabled.

## Styling

*   Tailwind CSS utility classes are used extensively.
*   Global styles and `@font-face` rules are in `src/app/globals.css`.
*   Sentra brand colors are defined in `